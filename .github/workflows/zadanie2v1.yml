name: Docker Image CI

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
          - name: Github source code checkout
            uses: actions/checkout@v4

      
          # Authenticate to the container registry
          - name: Authenticate to registry 
            uses: docker/login-action@v3
            with:
              username: ${{ vars.DOCKERHUB_USER }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          - name: Setup QEMU
            uses: docker/setup-qemu-action@v3

          - name: Setup Docker buildx
            uses: docker/setup-buildx-action@v3

          # Extract metadata (tags, labels) for Docker
          - name: Extract Docker metadata
            id: meta
            uses: docker/metadata-action@v5
            with:
              images: ${{ vars.DOCKERHUB_USER  }}/${{ vars.IMAGE_NAME }}
              flavour: latest=false           
              tags: |
                type=semver,priority=200,pattern={{version}}
                type=sha,priority=100,prefix=sha-,format=short         

          # Build and push Docker image with Buildx
          # (don't push on PR, load instead)
          - name: Build and push Docker image
            id: build-and-push
            uses: docker/build-push-action@v6
            with:
              context: .
              platforms: linux/amd64,linux/arm64
              push: true
              file: ./Dockerfile
              tags: ${{ steps.meta.outputs.tags }}
              labels: ${{ steps.meta.outputs.labels }}
              cache-from: type=registry,ref=${{ vars.DOCKERHUB_USER }}/${{ vars.IMAGE_NAME }}:cache
              cache-to: type=registry,ref=${{ vars.DOCKERHUB_USER }}/${{ vars.IMAGE_NAME }}:cache,mode=max


          # Compare the image built in the pull request with the one in production
          - name: Docker Scout
            id: docker-scout
            uses: docker/scout-action@v1
            with:
              command: quickview
              image: ${{ steps.meta.outputs.tags }}
              only-severities: critical,high,medium
              exit-code: true
          
          - name: 'Login to GitHub Container Registry'
            if: success()
            uses: docker/login-action@v1
            with:
              registry: ghcr.io
              username: ${{github.actor}}
              password: ${{secrets.GH_TOKEN}}

          # - name: Push Docker Image
          #   if: success()
          #   run:



